services:

# .net app
  dotnet-app:
    container_name: 'dotnet-app'
    build:
      context: .
      dockerfile: TelemetryWithGrafanaAndCollectorsSample/Dockerfile
    ports:
      - "5248:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - OTEL_COLLECTOR_ENDPOINT=http://otel-collector:4317
    depends_on:
      - otel-collector

# set Otel Collector
  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP grpc receiver
      - "4318:4318" # OTLP http receiver
      - "8889:8889" # Prometheus scrape endpoint

# set Tempo
  tempo:
    image: grafana/tempo:2.4.1
    ports:
      - "3200:3200" # Tempo query endpoint
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml

# set Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus-local
    ports:
        - "9090:9090"
    volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
        - ./recording_rules.yml:/etc/prometheus/recording_rules.yml
    restart: unless-stopped

# set Grafana
  grafana:
    image: grafana/grafana-oss
    container_name: grafana-local
    ports:
        - "3000:3000"
    environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
        - grafana-storage:/var/lib/grafana
    restart: unless-stopped

volumes:
    grafana-storage: